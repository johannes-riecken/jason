








****** Vocabulary/ico ******
From J Wiki
< Vocabulary
Jump to: navigation, search
>> <<   Down_to:_Dyad   Back_to:_Vocabulary Thru_to:_Dictionary
      i: y Steps
Rank_0 -- operates on individual atoms of y, producing a result that may require fill -- WHY_IS_THIS_IMPORTANT?


Like Integers (i.), except that the sequence ranges from (-y) thru (+y).
   i: 4
_4 _3 _2 _1 0 1 2 3 4

   i: _4
4 3 2 1 0 _1 _2 _3 _4


**** More Information ****
1. i: y operates on each atom of y independently, and produces a list for each one.
2. If y is a complex number a+bi (ajb or a j. b in J notation), its imaginary part b gives the number of steps between -a and a i.e. the result will contain b+1 atoms. In this case a may be any number.
3. If y has no imaginary part or the imaginary part is 0, the size of each step is 1. In this case y must be an even multiple of 0.5 (using tolerant_comparison).

      x i: y Index Of Last
Rank_Infinity -- operates on x and y as a whole, by items of x -- WHY_IS_THIS_IMPORTANT?


Like Index_Of (i.), except that it finds the last occurrence not the first.
   'abracadabra' i: 'a'
10

   'abracadabra' i: 'abc'   NB. several search terms at once
10 8 4
If the item is not found, the result is still #x, same as for x i. y.

**** Related Primitives ****
Index_Of (x i. y)

**** More Information ****
1. x i: y is a member of the i.-family.
2. The internal_rank of  x i: y uses items whose rank is the rank of items of x.
3. If x and y are of different classes, or if their items couldn't possibly match because of differing shapes, no error is signaled: each search simply fails to match.

**** Use These Combinations ****
Combinations using x i: y that have exceptionally_good_performance include:
                                                                                            Type;                                                                                                                             Variants;                  Benefits;
                        What It Does                                                     Precisions;                               Syntax      Primitives permitted in place of f                                            Restrictions                Bug Warnings
                                                                                            Ranks
      Find last place where  x f y is true  Permitted: Boolean, integer, floating point, byte, symbol (not unicode). x (f i: 1:) y x i:&1@:f y = ~: < <: > >: e.                  Permitted: (f!.0) (parentheses obligatory!) to force exact comparison.                             Avoids computing entire  x f y

      Find last place where  x f y is false                 x and y need not be the same precision.                  x (f i: 0:) y x i:&0@:f y = ~: < <: > >: e.                           J recognizes FLO only if f returns an atom or list.           Bug warning: if f is e. it does (,@e.) rather than e. regardless of ranks of arguments
                                                                                             Type;                                        Variants;        Benefits;
                                                What it does                              Precisions;            Syntax                  Restrictions      Bug Warnings
                                                                                             Ranks
                                          Find first/last match                                                  m&i. y   i: in place of i. for last match
                                                                                                                              !.0 for exact comparison
      Find index of first/last cell of y that does/does not match an m-item                                (e. i. 1:)&m y i: in place of i. for last cell  Bug warning: it does (,@e.) rather than e.
                                                                                                                                  0: for mismatch
            Find index of first/last occurrence of largest/smallest value   integer or floating-point list    (i. <./) y                      or i:        it actually does (i. >.!.0/) etc.; is faster than 0 ({ /:~) y
                                                                                                              (i. >./) y


Retrieved from "https://code.jsoftware.com/mediawiki/index.php?title=Vocabulary/ico&oldid=7239"
Category:
    * Voc
***** Navigation menu *****
**** Personal tools ****
    * Log_in
**** Namespaces ****
    * Page
    * Discussion
??
**** Variants ****
**** Views ****
    * Read
    * View_source
    * View_history
??
**** More ****
**** Search ****
[Unknown INPUT type][Search][Go]
**** Navigation ****
    * New_Users
    * Guides
    * NuVoc
    * System
    * Showcase
    * Library
    * Community
    * Recent_changes
    * Random_page
    * J_wiki_search
**** Tools ****
    * What_links_here
    * Related_changes
    * Special_pages
    * Printable_version
    * Permanent_link
    * Page_information
    * Cite_this_page
    * This page was last edited on 18 June 2014, at 00:02.
    * About_J_Wiki
    * [Powered_by_MediaWiki]
